//gradlew - command-line tool (allows interaction with the dependency management tool)
//settings.gradle - for more gradle configurations
//.gradle/ - contains some JARs (in order to not install gradle; this way it downloads all necessary files)6
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.apress'
version = '0.0.1-SNAPSHOT'
description = 'Pro Spring Boot 3 book - chapter 2'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    //implementation 'com.fasterxml.jackson.core:jackson-core:2.20.0'

    // brings: spring-web, spring-webmvc, tomcat, Jackson (JSON manipulation) modules and other JARs
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // brings jakarta-validation JARs for validating objects in the domain (RetroBoard and Card classes)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // for aspect oriented programming (AOP)
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    // Lombok -> eliminates boilerplate code (if you can get it to work inside your project ofc)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Properties -> for preprocessing customized properties,
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    // Web -> brings css, javascript files from "https://getbootstrap.com/" and adds them as resources
    // into the webjars/resource folder
    implementation 'org.webjars:bootstrap:5.2.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// for tests logging
test {
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}